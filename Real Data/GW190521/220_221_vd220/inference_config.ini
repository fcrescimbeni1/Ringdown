[data]
instruments = H1 L1 V1
trigger-time = 1242442967.4
analysis-start-time = -4
analysis-end-time = 4
; strain settings
sample-rate = 2048
frame-files = H1:/rds/projects/b/bhagwats-gravitational-wave-ringdowns/julian/projects/ringdown/scalar_driven_mode/data/H-H1_GWOSC_4KHZ_R2-1242440920-4096.gwf L1:/rds/projects/b/bhagwats-gravitational-wave-ringdowns/julian/projects/ringdown/scalar_driven_mode/data/L-L1_GWOSC_4KHZ_R2-1242440920-4096.gwf V1:/rds/projects/b/bhagwats-gravitational-wave-ringdowns/julian/projects/ringdown/scalar_driven_mode/data/V-V1_GWOSC_4KHZ_R2-1242440920-4096.gwf
;fake-strain = H1:aLIGODesignSensitivityP1200087 L1:aLIGODesignSensitivityP1200087
;fake-strain = H1:zeroNoise L1:zeroNoise
; psd settings
psd-estimation = median-mean
psd-inverse-length = 8
psd-segment-length = 8
psd-segment-stride = 4
psd-start-time = -256
psd-end-time = 256
;psd-model = H1:aLIGODesignSensitivityP1200087 L1:aLIGODesignSensitivityP1200087
; even though we're making fake strain, the strain
; module requires a channel to be provided, so we'll
; just make one up
channel-name = H1:GWOSC-4KHZ_R2_STRAIN L1:GWOSC-4KHZ_R2_STRAIN V1:GWOSC-4KHZ_R2_STRAIN
; Providing an injection file will cause a simulated
; signal to be added to the data
;injection-file = injection.hdf
; We'll use a high-pass filter so as not to get numerical errors from the large
; amplitude low frequency noise. Here we use 15 Hz, which is safely below the
; low frequency cutoff of our likelihood integral (20 Hz)
strain-high-pass = 15
; The pad-data argument is for the high-pass filter: 8s are added to the
; beginning/end of the analysis/psd times when the data is loaded. After the
; high pass filter is applied, the additional time is discarded. This pad is
; *in addition to* the time added to the analysis start/end time for the PSD
; inverse length. Since it is discarded before the data is transformed for the
; likelihood integral, it has little affect on the run time.
pad-data = 8
data-conditioning-low-freq = H1:0 L1:0 V1:0


[model]
name = gated_gaussian_noise
low-frequency-cutoff = H1:20.0 L1:20.0 V1:20.0


[sampler]
name = dynesty
nlive = 3000
dlogz = 0.1
sample = rwalk
checkpoint_time_interval = 1800
bootstrap = 0


[variable_params]
final_mass =
final_spin =
amp220 =
amp221 =
vd_relamp220 =
phi220 =
phi221 =
vd_phi220 =

[static_params]
; ringdown_specific parameters that will not change in MCMC
approximant = TdQNMfromFinalMassSpinDriven
harmonics = spheroidal
lmns = 222
vd_lmns = 221
t_final = 1
tref = 1242442967.4162047
ra = 0.20674377775445646
dec = -1.1791350072627822
distance = 1492.235429835937
polarization = 4.239106003042083
inclination = 0.9812831467993278
toffset_ms =


[waveform_transforms-tc]
name = custom
inputs = tref
tc = tref + ${static_params|toffset_ms}*0.001

[waveform_transforms-t_gate_start]
name = custom
inputs = t_gate_end
t_gate_start = t_gate_end - 0.5

[waveform_transforms-t_gate_end]
; end gate 1 ms after start of waveform for safety
name = custom
inputs = tc
t_gate_end = tc + 0.001


[prior-final_mass]
name = uniform
min-final_mass = 130
max-final_mass = 360

[prior-final_spin]
name = uniform
min-final_spin = -0.97
max-final_spin = 0.97

[prior-amp220]
; prior for amplitude
name = uniform
min-amp220 = 0
max-amp220 = 6

[prior-phi220]
; prior for initial phase
name = uniform_angle

[prior-amp221]
; prior for amplitude
name = uniform
min-amp221 = 0
max-amp221 = 4

[prior-phi221]
; prior for initial phase
name = uniform_angle

[prior-vd_relamp220]
; prior for amplitude
name = uniform
min-vd_relamp220 = 0
max-vd_relamp220 = 1

[prior-vd_phi220]
; prior for initial phase
name = uniform_angle


[waveform_transforms-vd_amp220]
name = custom
inputs = vd_relamp220, amp220
vd_amp220 = vd_relamp220 * amp220
